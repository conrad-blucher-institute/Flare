# /etc/nginx/nginx.conf

#Sets the number of worker processes based on CPU cores available
worker_processes auto; 
pid /var/run/nginx.pid;

events {
    #Handles how many connections each worker process can handle simutaneously
    worker_connections 1024; 
}

#Handles requests for the vue static files
http {
    #Loads the mime types file that defines mappings between file extensions and content types
    include /etc/nginx/mime.types; 
    default_type application/octet-stream;

    #Enables the sendFile system call that handles file transfers faster
    sendfile on; 

    #Time in seconds that Nginx should keep a connection open after finishing a request
    keepalive_timeout 65; 

    
     map $http_origin $cors_origin {
        default "";  # Default to disallow all origins
        "http://localhost:8080" "http://localhost:8080";
        "http://127.0.0.1:8080" "http://127.0.0.1:8080";
        "http://localhost:6100" "http://localhost:6100";
        "http://127.0.0.1:6100" "http://127.0.0.1:6100";
        "https://sherlock-dev.tamucc.edu/semaphore-api" "https://sherlock-dev.tamucc.edu/semaphore-api";
        "https://sherlock-prod.tamucc.edu/semaphore-api" "https://sherlock-prod.tamucc.edu/semaphore-api";

    }

    server {

        #Nginx listens on port 80
        listen 80; 

        #Sets the servername - Need to change to the reverse proxy/host name in production
        server_name frontend; 

        root /usr/share/nginx/html;

        # / is mapped with root
        location /flare/ {
            index index.html; 
            try_files $uri $uri/ /index.html;

            # CORS headers
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";

            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                return 204;
            }
          

        }

        # Serve static files (JS, CSS, images)
        location /flare/assets/ {
            alias /usr/share/nginx/html/assets/;  # Map /flare/assets/ to the correct directory
            try_files $uri =404;  # Return 404 if the file doesn't exist
        }

         # Serve CSV data files 
        location /flare/csv-data/ {
            alias /app/data/csv/; 
            autoindex on;

            # Ensure only existing files are served
            try_files $uri =404;
             # CORS headers for CSV
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type";

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin always;
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type";
                return 204;
            }
        }

        # Handle errors
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }
    }
}